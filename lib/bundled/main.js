/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if(!self.perceptionToolkitLoader){const e=async e=>{if(!a[e]&&(await new Promise(async t=>{if("document"in self){const a=document.createElement("script");a.src=function(){let e="";return window.PerceptionToolkit&&window.PerceptionToolkit.config&&window.PerceptionToolkit.config.root&&(e=window.PerceptionToolkit.config.root),`${e}/lib/bundled`}()+e.slice(1),a.defer=!0,document.head.appendChild(a),a.onload=t}else importScripts(e),t()}),!a[e]))throw new Error(`Module ${e} didnâ€™t register its module`);return a[e]},t=async(t,a)=>{const r=await Promise.all(t.map(e));a(1===r.length?r[0]:r)},a={require:Promise.resolve(t)};self.perceptionToolkitLoader=((t,r,n)=>{a[t]||(a[t]=new Promise(async t=>{let a={};const i={uri:location.origin+function(){let e="";return window.PerceptionToolkit&&window.PerceptionToolkit.config&&window.PerceptionToolkit.config.root&&(e=window.PerceptionToolkit.config.root),`${e}/lib/bundled`}()+name.slice(1)},o=await Promise.all(r.map(t=>"exports"===t?a:"module"===t?i:e(t))),s=n(...o);a.default||(a.default=s),t(a)}))})}perceptionToolkitLoader("./main.js",["exports","./pt-chunk-0f05cd01.js","./pt-chunk-ddb93541.js","./pt-chunk-d3dcaf5d.js"],function(e,t,a,r){"use strict";const n="",i=`\n  <${t.StreamCapture.defaultTagName}></${t.StreamCapture.defaultTagName}`;let o,s;async function c(e,{context:t=window,forceNewDetector:r=!1,polyfillRequired:n=!1,root:i=""}={}){(n||t===window&&!("BarcodeDetector"in t))&&(a.log("Using barcode detection polyfill",a.DEBUG_LEVEL.INFO,"BarcodeDetector"),await a.injectScript(`${i}/lib/polyfills/barcode-detector.js`)),o&&!r||(o=new t.BarcodeDetector),"isReady"in o&&await o.isReady;try{return(await o.detect(e)).map(e=>({type:e.format,value:e.rawValue}))}catch(o){return n?[]:(a.log(`Detection failed: ${o.message}`,a.DEBUG_LEVEL.WARNING),await c(e,{context:t,forceNewDetector:r,polyfillRequired:!0,root:i}))}}class d{constructor(e=""){this.targets=new Map,this.workerMessageCallbacks=new Map,this.isReadyInternal=new Promise(t=>{this.worker=new Worker(`${e}/lib/planar/planar-image_worker.js`),this.worker.onmessage=(async e=>{if("ready"===e.data)return void t();const{msgId:r,data:n}=e.data;a.log(`Message (id: ${r}) from worker.`,a.DEBUG_LEVEL.VERBOSE);const i=this.workerMessageCallbacks.get(r);i&&(this.workerMessageCallbacks.delete(r),i.apply(void 0,[n]))}),this.worker.postMessage(e),window.planarWorker=this.worker})}get isReady(){return this.isReadyInternal}detect(e){return 0===this.targets.size?Promise.resolve([]):new Promise(t=>{const r=performance.now();this.send({type:"process",data:e},n=>{if(null===n)return[];const i=n.map(e=>{const t=this.targets.get(e);return t?{type:"ARImageTarget",value:t.id}:{value:null}}).filter(e=>!!e.value);t(i),a.log(`Time taken (ms): ${performance.now()-r} `+`for ${e.width} * ${e.height}`,a.DEBUG_LEVEL.VERBOSE)})})}getTarget(e){for(const t of this.targets.values())if(t.id===e)return t}addTarget(e,t){return new Promise(r=>{this.send({type:"add",data:e,id:t.id},e=>{const{idx:t,id:n}=e;this.targets.set(t,{id:n}),a.log(`Target stored: ${n}, number ${t}`,a.DEBUG_LEVEL.VERBOSE),r(t)})})}removeTarget(e){return new Promise(t=>{this.send({type:"remove",data:e},r=>{this.targets.delete(r),a.log(`Target removed: number ${e}`,a.DEBUG_LEVEL.VERBOSE),t()})})}async clear(){for(const e of this.targets.keys())await this.removeTarget(e);return this.targets.clear(),new Promise(e=>{this.send({type:"reset"},()=>{a.log("Image detector reset",a.DEBUG_LEVEL.VERBOSE),e()})})}send(e,t){const r=(()=>new Array(16).fill(0).map(()=>String.fromCharCode(97+26*Math.random()|0)).join(""))();a.log(`Message (id: ${r}, type: ${e.type}) to worker.`,a.DEBUG_LEVEL.VERBOSE),this.workerMessageCallbacks.set(r,t),this.worker.postMessage({...e,msgId:r})}}async function l(e,{root:t=""}={}){return s||(s=new d(t)),await s.isReady,s.detect(e)}async function u(e,t,{root:a=""}={}){return s||(s=new d(a)),await s.isReady,s.addTarget(e,t)}async function h(e,{root:t=""}={}){return s||(s=new d(t)),await s.isReady,s.getTarget(e)}const m="\n:host {\n  --baseline: 12px;\n  position: fixed;\n  display: block;\n  top: 50%;\n  left: 50%;\n  min-width: 280px;\n  padding: var(--baseline) calc(var(--baseline) * 2);\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 20px;\n  color: #FFF;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 18px;\n  z-index: 2;\n}\n\n:host(.small) {\n  font-size: 14px;\n  top: auto;\n  bottom: var(--baseline);\n  min-width: 0;\n  white-space: nowrap;\n}\n";function f({id:e="pt.overlay",small:t=!1,createIfNecessary:a=!0}={}){const r=document.getElementById(e);if(r)return r;if(!a)return;const n=document.createElement("div");return n.id=e,n.attachShadow({mode:"open"}).innerHTML=`<style>${m}</style><span class="content"><slot></slot></span>`,t&&n.classList.add("small"),n}function g(e,{target:t=document.body,id:a="pt.overlay",small:r=!1}={}){const n=f({id:a,small:r});if(n)return n.textContent=e,t.appendChild(n),n}function p({id:e="pt.overlay"}={}){const t=f({id:e,createIfNecessary:!1});t&&t.remove()}function w(){navigator.onLine?p():g("Currently offline. Please reconnect to the network.")}function y(e,t){return"flat"in Array.prototype?e.flat(t):function(e,t){const a=e=>e.reduce((e,t)=>e.concat(t),[]);let r=a(e);if(t)for(let e=1;e<t;e++)r=a(r);return r}(e)}function E(e,t){return e+"__"+t}class k{constructor(){this.artstores=[],this.nearbyMarkers=new Map,this.nearbyImages=new Map,this.nearbyResults=new Set,this.currentGeolocation={}}async addArtifactStore(e){return this.artstores.push(e),this.generateDiffs()}async getDetectableImages(){return y(await Promise.all(this.artstores.map(e=>e.getDetectableImages?e.getDetectableImages():[])))}async updateGeolocation(e){return this.currentGeolocation=e,this.generateDiffs()}async markerFound(e){return this.nearbyMarkers.set(E(e.type,e.value),e),this.generateDiffs()}async markerLost(e){return this.nearbyMarkers.delete(E(e.type,e.value)),this.generateDiffs()}async imageFound(e){return this.nearbyImages.set(e.id,e),this.generateDiffs()}async imageLost(e){return this.nearbyImages.delete(e.id),this.generateDiffs()}async generateDiffs(){const e=await Promise.all(this.artstores.map(e=>e.findRelevantArtifacts?e.findRelevantArtifacts(Array.from(this.nearbyMarkers.values()),this.currentGeolocation,Array.from(this.nearbyImages.values())):[])),t=new Set(y(e)),a={found:[...[...t].filter(e=>!this.nearbyResults.has(e))],lost:[...[...this.nearbyResults].filter(e=>!t.has(e))]};return this.nearbyResults=t,a}}function v(e,t,a){return"flatMap"in Array.prototype?e.flatMap(t):function(e,t){return e.reduce((e,a,r,n)=>{const i=t(a,r,n);return Array.isArray(i)?e.concat(i):(e.push(i),e)},[])}(e,t)}class b{decode(e){return this.decodeUnknown(e)}decodeUnknown(e){if(Array.isArray(e))return this.decodeArray(e);if(!("@type"in e)||"string"!=typeof e["@type"])return[];switch(e["@type"]){case"DataFeed":return this.decodeDataFeed(e);case"ARArtifact":return this.decodeArArtifact(e);default:return[]}}decodeArray(e){return v(e,e=>this.decodeUnknown(e))}decodeDataFeed(e){const t=e.dataFeedElement;return t?Array.isArray(t)?this.decodeArray(t):this.decodeUnknown(t):[]}decodeArArtifact(e){return[e]}}class L{constructor(){this.decoder=new b}async fromUrl(e){const t=await fetch(e.toString());if(!t.ok)throw Error(`Fetch failure for ${e} with status: ${t.statusText}`);const a=t.headers.get("content-type");if(!a)return[];if(-1!==a.indexOf("application/json")||-1!==a.indexOf("application/ld+json")){const e=await t.json();return this.fromJson(e)}{const a=await t.text(),r=(new DOMParser).parseFromString(a,"text/html");return this.fromElement(r,e)}}async fromHtmlUrl(e){const t=await fetch(e.toString());if(!t.ok)throw Error(`Fetch failure for ${e} with status: ${t.statusText}`);const a=await t.text(),r=(new DOMParser).parseFromString(a,"text/html");return this.fromElement(r,e)}async fromJsonUrl(e){const t=await fetch(e.toString());if(!t.ok)throw Error(`Fetch failure for ${e} with status: ${t.statusText}`);const a=await t.json();return this.fromJson(a)}async fromElement(e,t){const a=[],r=e.querySelectorAll("script[type='application/ld+json']:not([src])");for(const e of r)if(e.textContent)try{const t=JSON.parse(e.textContent);a.push(this.fromJson(t))}catch(e){}const n=e.querySelectorAll("script[type='application/ld+json'][src]");for(const e of n){const r=e.getAttribute("src");try{const e=new URL(r,t);a.push(this.fromJsonUrl(e))}catch(e){}}const i=e.querySelectorAll("link[rel='alternate'][type='application/ld+json'][href]");for(const e of i){const r=e.getAttribute("href");try{const e=new URL(r,t);a.push(this.fromJsonUrl(e))}catch(e){}}return y(await Promise.all(a))}async fromJson(e){return this.decoder.decode(e)}}function T(e){return function(e){return!!e&&e.hasOwnProperty("@type")}(e)}class A{constructor(){this.images=new Map}addImage(e,t){return!!t.name&&(this.images.set(t.name,{target:t,artifact:e}),!0)}getDetectableImages(){const e=[];for(const{target:t}of this.images.values()){if(!T(t)||"ARImageTarget"!==t["@type"]||!t.name)continue;const a={id:t.name,media:[]};T(t.image)?"ImageObject"===t.image["@type"]&&a.media.push(t.image):t.image&&a.media.push({"@type":"ImageObject",encodingUrl:t.image}),t.hasOwnProperty("encoding")&&(a.media=a.media.concat(t.encoding)),t.hasOwnProperty("associatedMedia")&&(a.media=a.media.concat(t.associatedMedia)),e.push(a)}return e}findRelevantArtifacts(e){const t=[];for(const a of e){const e=this.images.get(a.id);e&&t.push(e)}return t}}class D{constructor(){this.markers=new Map}addMarker(e,t){return!!t.text&&(this.markers.set(t.text,{target:t,artifact:e}),!0)}findRelevantArtifacts(e){const t=[];for(const a of e){const e=this.markers.get(a.value);e&&t.push(e)}return t}}class S{constructor(){this.markerStore=new D,this.imageStore=new A}addArtifact(e){if(!e.arTarget)return 0;let t;t=Array.isArray(e.arTarget)?e.arTarget:[e.arTarget];let a=0;for(const r of t)if(T(r))switch(r["@type"]){case"Barcode":this.markerStore.addMarker(e,r)&&a++;break;case"ARImageTarget":this.imageStore.addImage(e,r)&&a++}return a}async findRelevantArtifacts(e,t,a){return[...this.markerStore.findRelevantArtifacts(e),...this.imageStore.findRelevantArtifacts(a)]}async getDetectableImages(){return this.imageStore.getDetectableImages()}}class U{constructor(){this.artloader=new L,this.artstore=new S,this.artdealer=new k,this.addArtifactStore(this.artstore)}async init(){const e=await this.artloader.fromElement(document,document.URL);this.saveArtifacts(e)}addArtifactStore(e){this.artdealer.addArtifactStore(e)}async loadArtifactsFromUrl(e){try{const t=await this.artloader.fromUrl(e);return this.saveArtifacts(t),t}catch(e){console.error(e)}return[]}async loadArtifactsFromSupportedUrl(e,t){if(t){if(Array.isArray(t)){const e=t;t=(t=>!!e.find(e=>e===t.origin))}}else t=(e=>e.origin===window.location.origin);return t(e)?this.loadArtifactsFromUrl(e):[]}async getDetectableImages(){return this.artdealer.getDetectableImages()}async markerFound(e,t){try{const a=new URL(e.value);await this.loadArtifactsFromSupportedUrl(a,t)}catch(e){}return this.artdealer.markerFound(e)}async markerLost(e){return this.artdealer.markerLost(e)}async updateGeolocation(e){return this.artdealer.updateGeolocation(e)}async imageFound(e){return this.artdealer.imageFound(e)}async imageLost(e){return this.artdealer.imageLost(e)}saveArtifacts(e){for(const t of e)this.artstore.addArtifact(t)}}window.PerceptionToolkit=window.PerceptionToolkit||{Elements:{},Events:{},Functions:{},config:{}};const{acknowledgeUnknownItems:C=!0,artifactSources:F=[],artifactStores:M=[],cardContainer:R,cardUrlLabel:I="View Details",cardMainEntityLabel:B="Launch",cardShouldLaunchNewWindow:P=!1,detectionMode:N="passive",detectors:O="lazy",hintTimeout:V=1e4,maxCards:$=1,root:x=""}=window.PerceptionToolkit.config;class G extends HTMLElement{constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.meaningMaker=new U,this.detectedTargets=new Map,this.onVisibilityChangeBound=this.onVisibilityChange.bind(this),this.onMarkerFoundBound=this.onMarkerFound.bind(this),this.onCaptureFrameBound=this.onCaptureFrame.bind(this),this.onCloseBound=this.onClose.bind(this),this.startupDetections=[],this.detectorsToUse={barcode:!0,image:!1},this.isRequestingNewStream=!1,this.isProcessingFrame=!1,this.hintTimeoutId=-1,this.initializeDetectors()}static get STREAM_OPTS(){return{video:{facingMode:"environment"}}}connectedCallback(){this.root.innerHTML=`<style>${n}</style> ${i}`,this.capture=this.root.querySelector(t.StreamCapture.defaultTagName),this.capture||a.log("Unable to obtain capture element",a.DEBUG_LEVEL.ERROR),this.addEventListeners()}disconnectedCallback(){this.removeEventListeners()}async start(){await this.meaningMaker.init(),await this.addArtifactStores(),await this.loadArtifactSources(),await this.onboardingComplete(),await this.beginDetection(),window.addEventListener("offline",w),window.addEventListener("online",w)}stop(){this.capture.classList.remove("active"),this.capture.stop(),this.detectedTargets.clear(),window.removeEventListener("offline",w),window.removeEventListener("online",w),p(),clearTimeout(this.hintTimeoutId),async function(){if(s)s.clear()}();const e=document.querySelector(a.OnboardingCard.defaultTagName);e&&e.remove()}onClose(){this.stop()}addEventListeners(){window.addEventListener("visibilitychange",this.onVisibilityChangeBound),this.addEventListener(t.captureFrame,this.onCaptureFrameBound),this.addEventListener(t.captureClosed,this.onCloseBound),this.addEventListener(t.markerDetect,this.onMarkerFoundBound)}removeEventListeners(){window.removeEventListener("visibilitychange",this.onVisibilityChangeBound),this.removeEventListener(t.captureFrame,this.onCaptureFrameBound),this.removeEventListener(t.captureClosed,this.onCloseBound),this.removeEventListener(t.markerDetect,this.onMarkerFoundBound)}async purgeOldMarkers(){const e=self.performance.now(),t=[];for(const[a,r]of this.detectedTargets.entries())if(!(e-r<1e3)){switch(a.type){case"ARImageTarget":const e=await h(a.value);if(!e)break;t.push(this.meaningMaker.imageLost(e));break;default:t.push(this.meaningMaker.markerLost(a))}this.detectedTargets.delete(a)}await Promise.all(t)}initializeDetectors(){const e="Perception Toolkit",t=new ImageData(640,480);if(!O||"lazy"===O)return a.log("Loading detectors (lazy)",a.DEBUG_LEVEL.INFO,e),void this.startupDetections.push(c(t,{root:x}));if("all"===O)return a.log("Loading detectors (all)",a.DEBUG_LEVEL.INFO,e),this.startupDetections.push(c(t,{root:x})),this.startupDetections.push(l(t,{root:x})),this.detectorsToUse.barcode=!0,void(this.detectorsToUse.image=!0);for(const[r,n]of Object.entries(O))if("lazy"!==n&&n)switch(a.log(`Loading ${r} (full)`,a.DEBUG_LEVEL.INFO,e),r){case"barcode":this.startupDetections.push(c(t,{root:x})),this.detectorsToUse.barcode=!0;break;case"image":this.startupDetections.push(l(t,{root:x})),this.detectorsToUse.image=!0}else a.log(`Loading ${r} (lazy)`,a.DEBUG_LEVEL.INFO,e)}async addArtifactStores(){if(!M)return;let e=M;Array.isArray(e)||(e=[M]);for(const t of e)this.meaningMaker.addArtifactStore(t)}async loadArtifactSources(){if(!F)return;let e=F;Array.isArray(e)||(e=[F]);const t=e.map(e=>this.meaningMaker.loadArtifactsFromUrl(new URL(e,document.URL)));await Promise.all(t)}async onboardingComplete(){const e=document.querySelector(a.OnboardingCard.defaultTagName);if(e)return new Promise(t=>{e.addEventListener(a.OnboardingCard.onboardingFinishedEvent,()=>{e.remove(),t()})})}async beginDetection(){try{await this.initializeStreamCapture();const e={id:"pt.detectors",small:!0};g("Initializing detectors...",e),await Promise.all(this.startupDetections),p(e),(this.detectorsToUse.image||"lazy"===O||"all"===O)&&await this.loadImageTargets(),this.hideLoaderIfNeeded()}catch(e){a.log(e.message,a.DEBUG_LEVEL.ERROR,"Detection")}}async loadImageTargets(){const e=await this.meaningMaker.getDetectableImages();if(0===e.length)return;const t={id:"pt.imagetargets",small:!0};g("Obtaining image targets...",t);let r=0;for(const t of e)for(const e of t.media){if(!e["@type"]||"MediaObject"!==e["@type"]||!e.contentUrl||!e.encodingFormat||"application/octet+pd"!==e.encodingFormat)continue;const n=e.contentUrl.toString();a.log(`Loading ${n}`,a.DEBUG_LEVEL.VERBOSE);try{const e=await fetch(n,{credentials:"include"}).then(e=>e.arrayBuffer()).then(e=>new Uint8Array(e));a.log(`Adding detection target: ${t.id}`),u(e,t),r++}catch(e){a.log(`Unable to load ${n}`,a.DEBUG_LEVEL.WARNING)}}p(t),a.log(`${r} target(s) added`,a.DEBUG_LEVEL.INFO),this.detectorsToUse.image=!0}hideLoaderIfNeeded(){const e=document.querySelector(r.DotLoader.defaultTagName);e&&e.remove()}async initializeStreamCapture(){a.log(`Starting detection: ${N}`,a.DEBUG_LEVEL.INFO,"Perception Toolkit");try{this.stream=await navigator.mediaDevices.getUserMedia(G.STREAM_OPTS);const e=await navigator.mediaDevices.enumerateDevices(),r=await async function(e){const t=e.filter(e=>"videoinput"===e.kind),a=t.some(e=>"Back Camera"===e.label);return t.some(e=>{if(!("getCapabilities"in e))return!1;const t=e.getCapabilities();return!!t.facingMode&&t.facingMode.find(e=>"environment")})||a}(e);this.capture.flipped=!r,this.capture.classList.add("active"),this.capture.start(this.stream),this.configureCaptureMode(),this.hintTimeoutId=setTimeout(()=>{g("Make sure the marker is inside the box.")},V)}catch(e){a.fire(t.cameraAccessDenied,window)}}configureCaptureMode(){const e=async()=>{const e=await this.capture.captureFrame();a.fire(t.captureFrame,this.capture,{imgData:e,detectionMode:N})};switch(N){case"active":this.capture.addEventListener("click",async()=>{this.capture.paused=!0,g("Processing..."),await e()});break;case"burst":const t=async()=>{await e(),requestAnimationFrame(t)};requestAnimationFrame(t);break;default:this.capture.captureRate=400}}async onVisibilityChange(){!this.isRequestingNewStream&&this.capture&&(document.hidden?this.capture.stop():(this.isRequestingNewStream=!0,this.stream=await navigator.mediaDevices.getUserMedia(G.STREAM_OPTS),this.isRequestingNewStream=!1,document.hidden||(this.capture.stop(),this.capture.start(this.stream))))}async onCaptureFrame(e){if(this.isProcessingFrame)return;this.isProcessingFrame=!0;const r=e,{imgData:n}=r.detail,i=[];this.detectorsToUse.barcode&&i.push(c(n,{root:x})),this.detectorsToUse.image&&i.push(l(n,{root:x}));const o=y(await Promise.all(i),1);for(const e of o){const r=this.detectedTargets.has(e);this.detectedTargets.set(e,self.performance.now()),r||(a.log(e.value,a.DEBUG_LEVEL.INFO,"Detect"),a.fire(t.markerDetect,this,e))}this.isProcessingFrame=!1,this.purgeOldMarkers()}async onMarkerFound(e){clearTimeout(this.hintTimeoutId),p();const r=e.detail,{value:n,type:i}=r,{shouldLoadArtifactsFrom:o}=window.PerceptionToolkit.config,s=[],c=[];switch(i){case"ARImageTarget":const e=await h(n);if(!e)break;const t=await this.meaningMaker.imageFound(e);s.push(...t.lost),c.push(...t.found);break;default:const a=await this.meaningMaker.markerFound(r,o);s.push(...a.lost),c.push(...a.found)}const d={lost:s,found:c};a.fire(t.perceivedResults,this,d).defaultPrevented||(!function(e=200){if("vibrate"in navigator)try{navigator.vibrate(e)}catch(e){}}(200),this.updateContentDisplay(d,r))}updateContentDisplay(e,t){R?(this.handleUnknownItems(e,t),this.removeUnknownItemsIfFound(e),this.createCardsForFoundItems(e)):a.log("No card container provided, but event's default was not prevented",a.DEBUG_LEVEL.ERROR)}handleUnknownItems(e,a){if(!R||!C||e.found.length>0||e.lost.length>0||R.childNodes.length>=$)return;const r=new t.Card;r.src=`Unknown value: ${a.value}`,r.classList.add("item-not-known"),R.appendChild(r)}removeUnknownItemsIfFound(e){if(!R||0===e.found.length)return;const t=R.querySelectorAll(".item-not-known");for(const e of t)e.remove()}createCardsForFoundItems(e){if(R)for(const{artifact:{arContent:a}}of e.found){if(R.childNodes.length>=$)continue;const e=a,r=new t.Card;if(r.src=e,R.appendChild(r),void 0!==e.url){const t=_({label:I||"View Details",newWindow:P,url:e.url});r.appendChild(t)}if(void 0!==e.mainEntity&&void 0!==e.mainEntity.url){const t=_({label:B||"Launch",newWindow:P,url:e.mainEntity.url});r.appendChild(t)}}}}function _({url:e="",label:a="",newWindow:r=!1}){if(!e)throw new Error("Unable to create button; no URL provided");const n=r?()=>window.open(e):()=>window.location.href=e,i=new t.ActionButton;return i.label=a,i.addEventListener("click",n),i}function j(e,t){customElements.get(e)||customElements.define(e,t)}G.defaultTagName="perception-toolkit",j(t.ActionButton.defaultTagName,t.ActionButton),j(t.Card.defaultTagName,t.Card),j(r.DotLoader.defaultTagName,r.DotLoader),j(G.defaultTagName,G),j(t.StreamCapture.defaultTagName,t.StreamCapture);let q=document.querySelector(G.defaultTagName);q||(q=new G,document.body.appendChild(q)),e.ActionButton=t.ActionButton,e.Card=t.Card,e.close=async function(){q&&await q.stop()},e.initialize=async function(){q&&await q.start()},Object.defineProperty(e,"__esModule",{value:!0})});
