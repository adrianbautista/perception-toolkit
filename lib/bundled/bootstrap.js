/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if(!self.perceptionToolkitLoader){const e=async e=>{if(!t[e]&&(await new Promise(async o=>{if("document"in self){const t=document.createElement("script");t.src=function(){let e="";return window.PerceptionToolkit&&window.PerceptionToolkit.config&&window.PerceptionToolkit.config.root&&(e=window.PerceptionToolkit.config.root),`${e}/lib/bundled`}()+e.slice(1),t.defer=!0,document.head.appendChild(t),t.onload=o}else importScripts(e),o()}),!t[e]))throw new Error(`Module ${e} didnâ€™t register its module`);return t[e]},o=async(o,t)=>{const n=await Promise.all(o.map(e));t(1===n.length?n[0]:n)},t={require:Promise.resolve(o)};self.perceptionToolkitLoader=((o,n,i)=>{t[o]||(t[o]=new Promise(async o=>{let t={};const r={uri:location.origin+function(){let e="";return window.PerceptionToolkit&&window.PerceptionToolkit.config&&window.PerceptionToolkit.config.root&&(e=window.PerceptionToolkit.config.root),`${e}/lib/bundled`}()+name.slice(1)},s=await Promise.all(n.map(o=>"exports"===o?t:"module"===o?r:e(o))),c=i(...s);t.default||(t.default=c),o(t)}))})}perceptionToolkitLoader("./bootstrap.js",["require","./pt-chunk-0f05cd01.js","./pt-chunk-ddb93541.js","./pt-chunk-d3dcaf5d.js"],function(e,o,t,n){"use strict";class i{constructor(){this.useEvents=!1,this.detectors=new Map}addDetector(e){const{name:o,supported:t}=e;if(this.detectors.has(o))throw new Error(`${o} already added`);this.detectors.set(o,t)}removeDetector(e){this.detectors.delete(e)}async detect(){const e={};for(const[o,t]of this.detectors)e[o]=await t();return this.useEvents&&t.fire(i.supportsEvent,self,e),e}}i.supportsEvent="supports";const r={name:"getUserMedia",supported:async()=>"mediaDevices"in self.navigator&&"getUserMedia"in self.navigator.mediaDevices},s={name:"wasm",supported:async()=>"WebAssembly"in self},c="pt.devicenotsupported";window.PerceptionToolkit=window.PerceptionToolkit||{},window.PerceptionToolkit.config=window.PerceptionToolkit.config||{},window.PerceptionToolkit.Events={CameraAccessDenied:o.cameraAccessDenied,CaptureClosed:o.captureClosed,CaptureStarted:o.captureStarted,CaptureStopped:o.captureStopped,DeviceNotSupported:c,MarkerDetect:o.markerDetect,PerceivedResults:o.perceivedResults},window.PerceptionToolkit.Elements={ActionButton:o.ActionButton,Card:o.Card},window.PerceptionToolkit.Functions={initializeExperience:l,closeExperience(){}},window.PerceptionToolkit.config.onload&&window.PerceptionToolkit.config.onload.call(null),t.enableLogLevelFromString(window.PerceptionToolkit.config.debugLevel||"error");const a=new Promise(async o=>{const{config:t}=window.PerceptionToolkit,{showLoaderDuringBoot:n=!0}=t,c=new i;c.addDetector(r),c.addDetector(s);const a=await c.detect();if(a[r.name]&&a[s.name]){const{showLoader:i}=await new Promise(function(o,t){e(["./loader.js"],o,t)});n&&i(),t.onboarding&&t.onboardingImages&&await new Promise(function(o,t){e(["./onboarding.js"],o,t)}),o(!0)}else o(!1)});async function d(){const{hideLoader:n}=await new Promise(function(o,t){e(["./loader.js"],o,t)});n(),t.fire(c,window).defaultPrevented||function({msg:e="",cls:t=""}){customElements.get(o.Card.defaultTagName)||customElements.define(o.Card.defaultTagName,o.Card);const{config:n}=window.PerceptionToolkit,{cardContainer:i=document.body}=n;if(i.querySelector(o.Card.defaultTagName))return;const r=new o.Card;r.classList.add(t),r.src=e,i.appendChild(r)}({cls:"no-support",msg:"Sorry, this browser does not support the required features"})}async function l(){if(!await a)return void await d();const{showLoader:o,hideLoader:t}=await new Promise(function(o,t){e(["./loader.js"],o,t)}),{config:n}=window.PerceptionToolkit;if(n&&n.onboardingImages&&n.onboarding){t();const{startOnboardingProcess:o}=await new Promise(function(o,t){e(["./onboarding.js"],o,t)});await o(n.onboardingImages)}o();const{initialize:i,close:r}=await new Promise(function(o,t){e(["./main.js"],o,t)});window.PerceptionToolkit.Functions.closeExperience=r,i()}!async function(){const t=await a,{hideLoader:n,showLoader:i}=await new Promise(function(o,t){e(["./loader.js"],o,t)}),{config:r}=window.PerceptionToolkit,{buttonVisibilityClass:s="visible"}=r,c=r.button?r.button:r.buttonSelector?document.body.querySelector(r.buttonSelector):null;n(),c&&(c.classList.toggle(s,t),c.addEventListener("click",async()=>{t?(i(),c.classList.remove(s),l()):await d()}),window.addEventListener(o.captureStopped,()=>{c.classList.add(s)}))}()});
